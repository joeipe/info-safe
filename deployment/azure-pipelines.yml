# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master

stages:
  - stage: build
    jobs:
      - job: build
        displayName: build
        pool:
          vmImage: ubuntu-latest

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "20.x"
            displayName: "Install Node.js"

          - script: |
              npm install -g @angular/cli
            displayName: "install angular cli"

          - task: Npm@1
            inputs:
              command: "install"
              workingDir: "$(System.DefaultWorkingDirectory)"
              verbose: false
            displayName: "npm install"

          - task: Npm@1
            inputs:
              command: "custom"
              workingDir: "$(System.DefaultWorkingDirectory)"
              verbose: false
              customCommand: "run build:production"
            displayName: "npm build"

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "dist"
              ArtifactName: "app"
            displayName: "Publish Artifacts"

  - stage: deploy_to_prod
    dependsOn: Build
    condition: and(always(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - job: deployToAppService
        displayName: "DeployToAppService - Prod"

        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: "current"
              artifactName: "app"
              targetPath: "$(Pipeline.Workspace)"

          - script: ls -la
            displayName: "What files are in the folder"
            workingDirectory: $(Pipeline.Workspace)/info-safe/browser

          # - task: AzureWebApp@1
          #   inputs:
          #     azureSubscription: "Personal-Sub(57f4859b-8037-4106-ac17-61520b9de19b)"
          #     appType: "webApp"
          #     appName: "infosafe"
          #     package: "$(Pipeline.Workspace)/app/info-safe/browser"
          #     deploymentMethod: "auto"
